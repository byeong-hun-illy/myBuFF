/*******************************************
  @fileName    : main.js
  @author      : 이병훈
  @date        : 2024. 10. 12
  @description : 거래처 메인 관련 코드
********************************************/

/*******************************************
  처음 화면 데이터 가져오기 함수
********************************************/
function loadSalesData(){
	const period = $('input[name="period"]:checked').val();
	$.ajax({
		url : '/cnpt/main/getSalesData',
		type : 'POST',
		contentType : 'application/json; charset=utf-8',
		data : JSON.stringify({ period : period }),
		beforeSend : function(xhr){
			xhr.setRequestHeader(csrfHeader, csrfToken);
		},
		success : function(data){
			$('#totalAmt').text(data.totalAmount.toLocaleString() + '원');
			
			console.log("data : ", data);
			console.log("chartData : ", data.chartData);
			if (!data.chartData || data.chartData.length === 0) {
			    console.log("차트 데이터가 없습니다.");
			    return;
			}
			
			
			// List로 들어오는 chartData이기 때문에 labels와 data를 분리해서 chartData를 전달
			const labels = data.chartData.map(item => item.period);
			const chartValues = data.chartData.map(item => item.totalSales);
			
			console.log("item : ", item);
			
			updateChart(labels, chartValues);
		},
		error :function(xhr, status, error){
			console.error("에러 발생 : ", error);
		}
	// ajax 끝	
	});
// loadSalesData 함수 끝
}

/*******************************************
  매출 현황 차트 그리기 함수
********************************************/
function updateChart(labels, chartValues){
	const ctx = document.getElementById('myChart').getContext('2d');
	
	// 기존 차트가 있으면 파괴
	if(window.salesChart) {
		window.salesChart.destroy();
	}
	
	window.salesChart = new Chart(ctx, {
		type : 'line',
		data : {
			labels : labels,
			datasets : [{
				label : '매출 금액',
				data : chartValues,
				borderColor : 'rgba(75, 192, 192, 1)',
				fill : false
			}]
		}
	});
// updateChart 함수 끝	
}

/*******************************************
  검색 조건에 따른 상품 매출 차트함수
********************************************/
function loadProductSalesData(period){
	console.log("검색 기간 : ", period);
	$.ajax({
		url : '/cnpt/main/getProductSalesData',
		type : 'GET',
		data : { period : period },
		beforeSend : function(xhr){
			xhr.setRequestHeader(csrfHeader, csrfToken);
		},
		success : function(res){
			console.log("res :", res);
			console.log("productData :", res.productSalesData);
			
			// 상품별 차트 업데이트
			updateProductChart(res.productSalesData);
		},
		error : function(xhr, status, error){
			console.error("오류 발생 : ", error);
		}
	// ajax 끝	
	});
// loadProductSalesData 함수 끝	
}

/*******************************************
  검색조건에 따른 상품 매출 차트 업데이트 함수
********************************************/
function updateProductChart(productSalesData){
	// 	기존 차트가 있다면 제거
	if(window.productChart){
		window.productChart.destroy();
	}
	
	// 데이터가 없을 경우
	if(!productSalesData || productSalesData.length === 0){
		console.log("상품 매출 데이터가 없습니다.");
		return;
	}
	
	// 라벨과 데이터 추출 - 상품명 / 총 매출
	const labels = productSalesData.map(item => item.gdsNm);
	const data = productSalesData.map(item => item.total);
	
	// 차트 데이터 설정
	const chartData = {
			labels: labels,
	        datasets: [{
	            label: '상품별 매출',
	            data: data,
	            backgroundColor: [
	                'rgba(255, 99, 132, 0.2)',
	                'rgba(54, 162, 235, 0.2)',
	                'rgba(255, 206, 86, 0.2)',
	                'rgba(75, 192, 192, 0.2)',
	                'rgba(153, 102, 255, 0.2)',
	                'rgba(255, 159, 64, 0.2)'
	            ],
	            borderColor: [
	                'rgba(255, 99, 132, 1)',
	                'rgba(54, 162, 235, 1)',
	                'rgba(255, 206, 86, 1)',
	                'rgba(75, 192, 192, 1)',
	                'rgba(153, 102, 255, 1)',
	                'rgba(255, 159, 64, 1)'
	            ], 
	            borderWidth : 1
		}]
	};	
	// 차트 옵션 설정
	const options = {
		 responsive: true,
	        plugins: {
	            legend: {
	                display: true,
	                position: 'top',
	            },
	            title: {
	                display: true,
	                text: '상품별 매출 차트'
	            }
	        }	  
	};	
	
	// 도넛 차트 생성
    const ctx = document.getElementById('gdsChart').getContext('2d');
    window.productChart = new Chart(ctx, {
        type: 'doughnut',
        data: chartData,
        options: options
    });
    
// updateProductChart 함수 끝	
}



