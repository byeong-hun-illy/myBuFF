package com.buff.com.mapper;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Mapper;

import com.buff.vo.PoVO;
import com.buff.vo.StockPoVO;
import com.buff.vo.StockVO;

/**
* @packageName  : com.buff.com.mapper
* @fileName     : DealMapper.java
* @author       : 송예진
* @date         : 2024.09.26
* @description  : 본사/거래처/가맹점의 발주와 납품을 통째로 관리하는 Mapper
* ===========================================================
* DATE              AUTHOR             NOTE
* -----------------------------------------------------------
* 2024.09.26        송예진     	  			최초 생성
*/
@Mapper
public interface DealMapper {
	
	/**
	* @methodName  : selectDeal
	* @author      : 송예진
	* @date        : 2024.09.26 
	* @param map   : 필수 입력 정보 type(po || so), bzentNo, 검색 조건(sort,orderby, bzentNm, deliType, deliYmd(sdeYmd,edeYmd), spmtYmd(sregYmd,eregYmd)), 페이징
	* @return      : 발주/납품 조회
	*/
	public List<PoVO> selectDeal(Map<String, Object> map);
	
	/**
	* @methodName  : selectTotalDeal
	* @author      : 송예진
	* @date        : 2024.09.26
	* @param map   : 필수 입력 정보 type(po || so), bzentNo, 검색 조건(sort,orderby, bzentNm, deliType, deliYmd(sdeYmd,edeYmd), spmtYmd(sregYmd,eregYmd))
	* @return      : 발주/납품 조회 갯수
	*/
	public int selectTotalDeal(Map<String, Object> map);
	
	/**
	* @methodName  : selectDealDtl
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param poNo
	* @return      : 발주에 대한 상세 정보
	*/
	public PoVO selectDealDtl(String poNo);
	
	/**
	* @methodName  : selectCnptGds
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param gdsCode
	* @return      : 해당 상품을 판매중인 거래처 조회
	*/
	public List<StockVO> selectCnptGds(String gdsCode);
	
	/**
	* @methodName  : insertPo
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param poVo(bzentNo) : 발주 받는 사람의 사업체 번호(본사나 가맹점)
	* @return
	*/
	public int insertPo(PoVO poVo);
	
	/**
	* @methodName  : insertStockPo
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param stockPoVO : 발주 정보
	* @return
	*/
	public int insertStockPo(StockPoVO stockPoVO);
	
	/**
	* @methodName  : deleteStockPo
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param poNo
	* @return      : STOCK_PO삭제 
	*/
	public int deleteStockPo(String poNo);
	
	/**
	* @methodName  : deletePo
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param poNo
	* @return      : PO삭제 (선행 STOCK_PO삭제필요) -deleteStockPo
	*/
	public int deletePo(String poNo);
	
	
	/**
	* @methodName  : updateMinStock
	* @author      : 송예진
	* @date        : 2024.09.28
	* 거래처나 가맹점이 승인한 경우 (본사나 거래처) - 수량 감소
	*/
	public int updateMinStock(String poNo);
	
	
	/**
	* @methodName  : updateAddStock
	* @author      : 송예진
	* @date        : 2024.09.28
	* 배송 완료한 경우 (본사나 가맹점) - 수량 추가
	* MERGE을 써서 조건문에 따라 INSERT나 UPDATE가 이루어진다
	*/
	public int updateAddStock(String poNo);
	
	/**
	* @methodName  : updatePo
	* @author      : 송예진
	* @date        : 2024.09.28
	 	배송 승인한 경우 (deliType = DELI02 , deliYmd) > updateMinStock (발주 받은사람이 누름 -> 본사 거래처)
		배송 완료 (deliType = DELI03) > updateAddStock (발주시킨사람이 누름 -> 가맹점 본사)
		미승인 (deliType = DELI04, rjctRsn)
	*/
	public int updatePo(PoVO poVO);
	
	/**
	* @methodName  : insertPoClcln
	* @author      : 송예진
	* @date        : 2024.09.28
	* @param poNo
	* @return      : 배송 완료하는 경우 승인
	*/
	public int insertPoClcln(String poNo);
}
