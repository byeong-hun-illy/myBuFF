package com.buff.cnpt.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.buff.cnpt.service.CnptGdsService;
import com.buff.util.ArticlePage;
import com.buff.vo.GdsVO;

import lombok.extern.slf4j.Slf4j;

/**
* @packageName  : com.buff.cnpt.controller
* @fileName     : CnptGdsController.java
* @author       : 이병훈
* @date         : 2024.09.22
* @description  : 거래처 재고현황 관련 컨트롤러
* ===========================================================
* DATE              AUTHOR             NOTE
* -----------------------------------------------------------
* 2024.09.22        이병훈     	  			최초 생성
*/
@PreAuthorize("hasRole('ROLE_CNPT')")
@Slf4j
@RequestMapping("/cnpt")
@Controller
public class CnptGdsController {

	@Autowired
	CnptGdsService cnptGdsService;
	
	
	
	/**
	* @methodName  : selectGds
	* @author      : 이병훈 
	* @date        : 2024.09.22
	* @param model
	* @return : 상품 재고 조회 페이지
	*/
	@GetMapping("/gds/list")
	public String selectGds(Model model) {
		return "cnpt/gds/selectGds";
	}
	
	
	/**
	* @methodName  : selectGdsAjax
	* @author      : 이병훈
	* @date        : 2024.09.22
	* @param map : 검색 조건
	* @return : 상품 재고 ajax 조회 처리
	*/
	@GetMapping("/gds/listAjax")
	@ResponseBody
	public Map<String, Object> selectGdsAjax(@RequestParam Map<String, Object> map){
		String currentPageStr = (String) map.get("currentPage");
		String sizeStr = (String) map.get("size");
		
		// 기본값 설정
		int currentPage = 1;
		int size = 10;
		int total = this.cnptGdsService.selectTotalGds(map);
		
		// 빈 문자열이 아닌 경우에만 값을 변환
		if(currentPageStr != null && !currentPageStr.trim().isEmpty()) {
			currentPage = Integer.parseInt(currentPageStr);
		}
			
		if(sizeStr != null && !sizeStr.trim().isEmpty()) {
			size = Integer.parseInt(sizeStr);
		}
		
		// 검색 조건 설정
		
		map.put("size", size);
		map.put("currentPage", currentPage);
		
		// 서비스 호출
//		ArticlePage<GdsVO> articlePage = this.cnptGdsService.selectCnptGds(searchMap);
//		log.info("articlePage : " + articlePage);
		
		// 서비스 호출
		List<GdsVO> gdsList = this.cnptGdsService.selectCnptGds(map);
		
		log.info("gdsList : " + gdsList);
		
		
		// 데이터 변환
		Map<String, Object> result = new HashMap<String, Object>();
//		result.put("articlePage", articlePage);
		
		result.put("articlePage", new ArticlePage<GdsVO>(total, currentPage, size, gdsList, map));
		
		log.info("result : " + result);
		
		return result;
		
		
	}
	
	/**
	* @methodName  : downloadExcel
	* @author      : 이병훈
	* @date        : 2024.09.23
	* @param response 
	* @description : 상품 재고 현황 리스트 엑셀 다운로드
	*/
	@GetMapping("/gds/downloadExcel")
	public void downloadExcel(HttpServletResponse response) {
		this.cnptGdsService.downloadExcel(response);
	}
	
	
	
}
