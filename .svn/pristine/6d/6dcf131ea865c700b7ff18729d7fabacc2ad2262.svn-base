package com.buff.hdofc.service.impl;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.buff.hdofc.mapper.HdofcEventMapper;
import com.buff.hdofc.service.HdofcEventService;
import com.buff.util.UploadController;
import com.buff.vo.CouponGroupVO;
import com.buff.vo.EventVO;
import com.buff.vo.MenuVO;
import com.buff.vo.MngrVO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class HdofcEventServiceImpl implements HdofcEventService {

	@Inject
	HdofcEventMapper HdofcEventMapper;
	
	@Inject
	UploadController uploadController;
	

	/** 이벤트 목록 시작 */
	// 전체 쿠폰 조회
	@Override
	public List<CouponGroupVO> selectCouponGroupList() {
		return this.HdofcEventMapper.selectCouponGroupList();
	}

	// 전체 사원 조회
	@Override
	public List<MngrVO> selectMngrList() {
		return this.HdofcEventMapper.selectMngrList();
	}

	// 전체 이벤트 갯수
	@Override
	public int selectAll(Map<String, Object> map) {
		return this.HdofcEventMapper.selectAll(map);
	}

	// 대기 중인 이벤트 갯수
	@Override
	public int selectWaiting(Map<String, Object> map) {
		return this.HdofcEventMapper.selectWaiting(map);
	}

	// 취소 된 이벤트 갯수
	@Override
	public int selectCancelled(Map<String, Object> map) {
		return this.HdofcEventMapper.selectCancelled(map);
	}

	// 예정 된 이벤트 갯수
	@Override
	public int selectScheduled(Map<String, Object> map) {
		return this.HdofcEventMapper.selectScheduled(map);
	}

	// 진행 중인 이벤트 갯수
	@Override
	public int selectProgress(Map<String, Object> map) {
		return this.HdofcEventMapper.selectProgress(map);
	}

	// 완료 된 이벤트 갯수
	@Override
	public int selectCompleted(Map<String, Object> map) {
		return this.HdofcEventMapper.selectCompleted(map);
	}

	// 검색조건에 현재 게시판 갯수. total로 반환 됨
	@Override
	public int selectTotal(Map<String, Object> map) {
		return this.HdofcEventMapper.selectTotal(map);
	}
	
	// 전체 이벤트 조회
	@Override
	public List<EventVO> selectEventList(Map<String, Object> map) {
		return this.HdofcEventMapper.selectEventList(map);
	}
	/** 이벤트 목록 끝 */

	/** 이벤트 추가 시작 */
	@Transactional
	@Override
	public int eventInsert(EventVO eventVO) {

		int result = 0;
		
		// 파일 업로드 처리 1) FILE_GROUP 테이블에 INSERT , 2) FILE_DETAIL 테이블에 INSERT
		MultipartFile[] multipartFile = eventVO.getUploadFile();
		
		// 파일을 선택한 경우만 실행함
		// multipartFile[0] : 파일객체들 중에서 첫번째 파일객체를 가져옴
		if(multipartFile[0].getOriginalFilename().length()>0) { // 파일이 있음

			// 공통 멀티파일업로드 메소드 호출
			// return값 : FILE_GROUP.FILE_GROUP_NO의 값
			long fileGroupNO = this.uploadController.multiImageUpload(multipartFile);
			log.info("registPost -> fileGroupNO : "+fileGroupNO);

			// Event 테이블에 INSERT
			eventVO.setFileGroupNo(fileGroupNO);
		} else {
			// null
			eventVO.setFileGroupNo(0); 
		}

		// 이벤트 추가
		result += this.HdofcEventMapper.eventInsert(eventVO);
		
		// 추가 된 이벤트 조회
		String eventNo = this.HdofcEventMapper.selectNewEvent();
		eventVO.setEventNo(eventNo);

		// 조회 된 이벤트를 가지고 쿠폰 그룹 추가
		result += this.HdofcEventMapper.couponGroupInsert(eventVO);
		
		log.info("eventInsert -> ServiceImpl -> result(성공 시 2개): "+result);

		return result;
	}
	
	// 전체 메뉴 갯수 조회
	@Override
	public int selectTotalMENU() {
		return this.HdofcEventMapper.selectTotalMENU();
	}
	
	// 세트 갯수 조회
	@Override
	public int selectMENU01() {
		return this.HdofcEventMapper.selectMENU01();
	}

	// 햄버거 갯수 조회
	@Override
	public int selectMENU02() {
		return this.HdofcEventMapper.selectMENU02();
	}

	// 사이드 갯수 조회
	@Override
	public int selectMENU03() {
		return this.HdofcEventMapper.selectMENU03();
	}

	// 음료 갯수 조회
	@Override
	public int selectMENU04() {
		return this.HdofcEventMapper.selectMENU04();
	}
	
	// 메뉴 조회
	@Override
	public List<MenuVO> selectMenuList(String menuType) {
		return this.HdofcEventMapper.selectMenuList(menuType);
	}
	/** 이벤트 추가 끝 */


}
