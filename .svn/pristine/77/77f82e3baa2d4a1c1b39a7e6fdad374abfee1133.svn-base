package com.buff.cust.service.impl;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.buff.cust.mapper.CustCenterMapper;
import com.buff.cust.service.CustCenterService;
import com.buff.util.UploadController;
import com.buff.vo.FaqVO;
import com.buff.vo.NoticeVO;
import com.buff.vo.QsVO;

import lombok.extern.slf4j.Slf4j;

/**
* @packageName  : com.buff.cust.service.impl
* @fileName     : CustCenterServiceImpl.java
* @author       : 서윤정
* @date         : 2024.09.17
* @description  :
* ===========================================================
* DATE              AUTHOR             NOTE
* -----------------------------------------------------------
* 2024.09.17        이름     	  			최초 생성
*/
@Service
@Slf4j
public class CustCenterServiceImpl implements CustCenterService {
	@Inject 
	UploadController uploadController;
	
	@Inject
	CustCenterMapper centerMapper;
	
	
	/**
	* @methodName  : selectFaq
	* @author      : 서윤정
	* @date        : 2024.09.13
	* @param  	   : 
	* @return      : FAQ 리스트 목록
	*/
	@Override
	public List<FaqVO> selectFaq(String faqCategory) {
		return this.centerMapper.selectFaq(faqCategory);
	}
	
	
	/**
	* @methodName  : selectFaq
	* @author      : 서윤정
	* @date        : 2024.09.17
	* @param  	   : 
	* @return      : 공지사항 리스트 목록
	*/

	@Override
	public List<NoticeVO> selectNotice(Map<String, Object> map) {
		// TODO Auto-generated method stub
		return this.centerMapper.selectNotice(map);
	}


	@Override
	public NoticeVO selectNoticeDetail(int ntcSeq) {
		// TODO Auto-generated method stub
		return this.centerMapper.selectNoticeDetail(ntcSeq);
	}


	@Override
	public int insertQsPost(QsVO qsVO) {
		// TODO Auto-generated method stub
		MultipartFile[] multipartFile = qsVO.getUploadFile();
		
		// 파일을 선택한 경우만 실행함
		// multipartFile[0] : 파일객체들 중에서 첫번째 파일객체를 가져옴
		if(multipartFile != null && multipartFile.length > 0 && multipartFile[0].getOriginalFilename().length() > 0) { // 파일이 있음

			// 공통 멀티파일업로드 메소드 호출
			// return값 : FILE_GROUP.FILE_GROUP_NO의 값
			long fileGroupNo = this.uploadController.multiImageUpload(multipartFile);
			log.info("registPost -> fileGroupNO : "+fileGroupNo);

			// Notice 테이블에 INSERT
			qsVO.setFileGroupNo(fileGroupNo);
		} else {
			// null
			qsVO.setFileGroupNo(0); 
		}
		
		
		
		return this.centerMapper.insertQsPost(qsVO);
	}


	@Override
	public void inqCnt(int ntcSeq) {
		// TODO Auto-generated method stub
		this.centerMapper.inqCnt(ntcSeq);
	}







}
