package com.buff.hdofc.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.buff.com.mapper.ComMapper;
import com.buff.com.service.DealService;
import com.buff.util.ArticlePage;
import com.buff.vo.BzentVO;
import com.buff.vo.PoVO;
import com.buff.vo.StockPoVO;
import com.buff.vo.StockVO;

import lombok.extern.slf4j.Slf4j;

@Controller
@PreAuthorize("hasRole('ROLE_HDOFC')")
@RequestMapping("/hdofc/deal")
@Slf4j
public class HdofcDealController {

	@Autowired
	DealService dealService;
	
	@Autowired
	ComMapper comMapper;
	
	// 발주나 납품 페이지로 이동
	@GetMapping("/list")
	public String selectDeal(Model model) {
		model.addAttribute("deli", this.comMapper.selectCom("DELI"));
		return "hdofc/deal/selectDeal";
	}
	
	@GetMapping("/listAjax")
	@ResponseBody
	public Map<String, Object> selectDealAjax(@RequestParam Map<String,Object> map) {
	    int size = 10;
	    map.put("size", size);
	    List<PoVO> polist = this.dealService.selectDeal(map);
	    Map<String, Object> response = this.dealService.selectTotalDeal(map);
	    int total = (int) response.get("total");
	    int currentPage = Integer.parseInt((String) map.get("currentPage"));
	    
	    // 분류 숫자 계산
	    // 응답 데이터를 담을 Map 생성
	    response.put("articlePage", new ArticlePage<PoVO>(total, currentPage, size, polist, map));
	    
	    return response; // 여러 데이터를 포함한 Map 반환
	}
	
	/**
	* @methodName  : selectDealDtl
	* @author      : 송예진
	* @date        : 2024.09.26
	* @return      : 가맹점 상세 이동
	*/
	@GetMapping("/dtl")
	public String selectDealDtl() {
		return "hdofc/deal/selectDealDtl";
	}
	
	/**
	* @methodName  : selectDealDtlAjax
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param poNo
	* @return      : 가맹점 상세 값 가져오기 (발주번호를 받아)
	*/
	@PostMapping("/dtlAjax")
	@ResponseBody
	public Map<String, Object> selectDealDtlAjax(@RequestParam String poNo){
		Map<String, Object> map = new HashMap<String, Object>();
		PoVO poVo = this.dealService.selectDealDtl(poNo);
		map.put("po", poVo);
		return map;
	}
	
	/**
	* @methodName  : insertPo
	* @author      : 송예진
	* @date        : 2024.09.27
	* @return      : 발주 페이지 이동
	*/
	@GetMapping("/regist")
	public String insertPo() {
		return "hdofc/deal/insertPo";
	}
	
	/**
	* @methodName  : selectCnptGdsAjax
	* @author      : 송예진
	* @date        : 2024.09.27
	* @param gdsCode
	* @return      : 거래처 추가
	*/
	@PostMapping("/cnptGds")
	@ResponseBody
	public List<StockVO> selectCnptGdsAjax(@RequestParam String gdsCode){
		return this.dealService.selectCnptGds(gdsCode);
	}
	
	@ResponseBody
	@PostMapping("/registAjax")
	public int insertDealAjax(@RequestBody Map<String, List<StockPoVO>> bzentNoGroups) {
		return this.dealService.insertDealAjax(bzentNoGroups);
	}
	
	@PostMapping("/deleteAjax")
	@ResponseBody
	public int deletePoAjax(@RequestParam String poNo) {
		return this.dealService.deletePo(poNo);
	}
}
