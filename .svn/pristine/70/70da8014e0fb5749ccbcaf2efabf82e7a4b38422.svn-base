package com.buff.cnpt.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.buff.cnpt.service.impl.CnptService;
import com.buff.com.mapper.BankMapper;
import com.buff.vo.BzentVO;
import com.buff.vo.MemberVO;

import lombok.extern.slf4j.Slf4j;

@RequestMapping("/cnpt")
@Slf4j
@Controller
public class CnptController {
	
	@Autowired
	BankMapper bankMapper;
	
	@Autowired
	CnptService cnptService;

	/**
	* @methodName  : selectInfo
	* @author      : 이병훈
	* @date        : 2024.09.17
	* @param bzentNo : 거래처 번호
	* @param model
	* @return	   : 거래처 정보 및 담당자 정보
	*/
	@GetMapping("/{bzentNo}")
	public String selectInfo(@PathVariable String bzentNo, Model model) {
		
		// 서비스에서 거래처 정보 및 거래처 담당자 정보 가져오기
		BzentVO bzentInfo = cnptService.selectCnpt(bzentNo);
		
		log.info("bzentInfo : " + bzentInfo);
		
		// JSP에 전달한 데이터 모델 추가
		model.addAttribute("bzentVO", bzentInfo);
		model.addAttribute("bankVO", this.bankMapper.selectBank());
		
		// JSP 페이지로 이동
		return "cnpt/selectCnpt";
		
	}
	
	/**
	* @methodName  : updateCnpt
	* @author      : 이병훈
	* @date        : 2024.09.18
	* @param bzentVO : 수정된 거래처 정보
	* @param model
	* @return : 수정 결과 페이지
	*/
	@PostMapping("/updateCnpt")
	public String updateCnpt(BzentVO bzentVO, Model model) {
		try {
			
			// 수정된 정보를 DB에 UPDATE
			cnptService.updateCnpt(bzentVO);
			
			// 업데이트 이후 새로운 정보 불러오기
			BzentVO updateInfo = cnptService.selectCnpt(bzentVO.getBzentNo());
			model.addAttribute("bzentVO", updateInfo);
			model.addAttribute("bankVO", this.bankMapper.selectBank());
			
			log.info("Update bzentVO : " + updateInfo);
			
			// 수정이 완료된 후, 페이지 이동
			return "cnpt/selectCnpt";
		} catch (Exception e) {
			log.error("업체 정보 수정 중 문제 발생 : ", e);
			model.addAttribute("error", "정보 수정 중 오류 발생");
			return "error";
		}
		
	}
	
	/**
	* @methodName  : updateCnptMngr
	* @author      : 이병훈
	* @date        : 2024.09.18
	* @param memberVO : 거래처 담당자 정보가 담긴 VO객체
	* @param model
	* @return : 수정후 거래처 담당자 정보 페이지로 이동
	*/
	@PostMapping("/updateCnptMngr")
	public String updateCnptMngr(MemberVO memberVO, Model model) {
		
		try {
			// 담당자 정보 수정 로직 처리
			cnptService.updateMngr(memberVO);
			
			// 수정된 정보를 다시 조회
			BzentVO bzentInfo = cnptService.selectCnpt(memberVO.getMbrId());
			model.addAttribute("bzentVO", bzentInfo);
			
			// 성공적으로 수정된 경우 담당자 정보 조회 페이지로 이동
			return "cnpt/selectCnpt";
			
		} catch (Exception e) {
			log.error("담당자 정보 수정 중 오류 발생 : ", e);
			
			model.addAttribute("error", "담당자 정보 수정 중 오류가 발생했습니다.");
			
			return "error";
		}
		
	}
	
	
}
