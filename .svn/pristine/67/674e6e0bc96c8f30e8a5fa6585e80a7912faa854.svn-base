<%--
    @fileName    : selectFrcsMenuSlsList.jsp
    @programName : 가맹점 매출 관리
    @description : 가맹점 메뉴별 매출 조회 페이지
    @author      : 정현종
    @date        : 2024. 10. 03
--%>
<%@ page language="java" contentType="text/html;charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec"%>
<script src='/resources/js/global/value.js'></script>
<script src="/resources/js/jquery-3.6.0.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<sec:authentication property="principal.MemberVO" var="user" />
<link rel="stylesheet" type="text/css" href="/resources/frcs/css/selectFrcsMenuSlsList.css">

<!-- Chart.js 라이브러리 추가 -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script type="text/javascript">
let menuType = '';
let bzentNo = '${user.bzentNo}';

$(function() {
    // 검색영역 초기화
    $('.search-reset').on('click', function() {
        $('.select-selected').text('전체');
        $('#menuType').val('');
        $('#menuNm').val('');
        $('#startYmd').val('');
        $('#endYmd').val('');

        $('#menTypeSummary').text('전체');
        $('#menuNmSummary').text('전체');
        $('#dateSummary').text('전체');

        $('.tap-cont').removeClass('active');
        $('#tap-all').parent().addClass('active');
    });

    $(document).ready(function() {
		$.ajax({
            url: "/frcs/menuSlsListAjax",
            async: true,
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            data: JSON.stringify({
                startYmd: '', // 초기값으로 비워두기
                endYmd: '',   // 초기값으로 비워두기
                bzentNo: bzentNo // bzentNo는 필요에 따라 설정
            }),
            success: function(data) {
                console.log('Received Data:', data); // 서버에서 받은 데이터 확인

                // 데이터가 배열인지 확인
                if (!Array.isArray(data)) {
                    console.error('Received data is not an array:', data);
                    return; // 데이터가 배열이 아닌 경우 종료
                }

                // 메뉴 유형과 매출액을 저장할 객체 초기화
                var salesData = {};

                // 데이터 처리
                $.each(data, function(index, item) {
                    var menuType = item.menuType; // 'MENU01' 등
                    var salesAmount = item.sumOrdrAmt; // 매출액

                    // 메뉴 유형이 이미 객체에 있으면 매출액을 더하고, 없으면 새로 추가
                    if (salesData[menuType]) {
                        salesData[menuType] += salesAmount;
                    } else {
                        salesData[menuType] = salesAmount;
                    }
                });

                // 차트에 사용할 레이블과 데이터 배열 생성
                var menuLabels = {
                    'MENU01': '세트',
                    'MENU02': '단품',
                    'MENU03': '사이드',
                    'MENU04': '음료'
                };

                var menuTypes = Object.keys(salesData).map(function(key) {
                    return menuLabels[key] || key; // 라벨 변환
                });
                var salesAmounts = Object.values(salesData);

                // 백분율 계산
                var totalSales = salesAmounts.reduce((a, b) => a + b, 0);
                var percentages = salesAmounts.map(amount => ((amount / totalSales) * 100).toFixed(2));

                // 차트 그리기 함수 호출
                drawPieChart(menuTypes, salesAmounts, percentages);
            },
            error: function(xhr, status, error) {
                console.error('AJAX Error:', error);
                alert('데이터를 가져오는 데 실패했습니다. 잠시 후 다시 시도해 주세요.');
            }
        });
     });	
        $('#viewChartBtn').on('click', function() {
            let startYmd = $('#startYmd').val();
            let endYmd = $('#endYmd').val();

            // 유효한 날짜 입력 확인
            if (!startYmd || !endYmd) {
                alert("시작일과 종료일을 모두 입력해 주세요.");
                return;
            }

            $.ajax({
                url: "/frcs/menuSlsListAjax",
                async: true,
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                beforeSend: function(xhr) {
                    xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
                },
                data: JSON.stringify({
                    startYmd: startYmd,
                    endYmd: endYmd,
                    bzentNo: bzentNo // bzentNo는 필요에 따라 설정
                }),
                success: function(data) {
                    console.log('Received Data:', data); // 서버에서 받은 데이터 확인

                    // 데이터가 배열인지 확인
                    if (!Array.isArray(data)) {
                        console.error('Received data is not an array:', data);
                        return; // 데이터가 배열이 아닌 경우 종료
                    }

                    // 메뉴 유형과 매출액을 저장할 객체 초기화
                    var salesData = {};

                    // 데이터 처리
                    $.each(data, function(index, item) {
                        console.log('Item:', item); // 각 아이템 로그

                        var menuType = item.menuType; // 'MENU01' 등
                        var salesAmount = item.sumOrdrAmt; // 매출액

                        // 확인: menuType과 salesAmount가 유효한 값인지 출력
                        if (menuType && salesAmount) {
                            console.log('Valid Item:', item);
                        } else {
                            console.error('Invalid Item:', item);
                            return; // 유효하지 않은 데이터는 무시
                        }

                        // 메뉴 유형이 이미 객체에 있으면 매출액을 더하고, 없으면 새로 추가
                        if (salesData[menuType]) {
                            salesData[menuType] += salesAmount;
                        } else {
                            salesData[menuType] = salesAmount;
                        }
                    });

                    console.log('Sales Data:', salesData); // 최종 집계된 데이터 로그

                    // 차트에 사용할 레이블과 데이터 배열 생성
                    var menuLabels = {
                        'MENU01': '세트',
                        'MENU02': '단품',
                        'MENU03': '사이드',
                        'MENU04': '음료'
                    };

                    var menuTypes = Object.keys(salesData).map(function(key) {
                        return menuLabels[key] || key; // 라벨 변환
                    }); // 메뉴 유형 배열
                    var salesAmounts = Object.values(salesData); // 매출액 배열

                    console.log('Menu Types:', menuTypes); // 메뉴 유형 로그
                    console.log('Sales Amounts:', salesAmounts); // 매출액 로그

                    // 백분율 계산
                    var totalSales = salesAmounts.reduce((a, b) => a + b, 0);
                    var percentages = salesAmounts.map(amount => ((amount / totalSales) * 100).toFixed(2)); // 소수점 2자리로 표현
                    
                    // 차트 그리기 함수 호출
                    drawPieChart(menuTypes, salesAmounts, percentages);
                },
                error: function(xhr, status, error) {
                    console.error('AJAX Error:', error);
                    alert('데이터를 가져오는 데 실패했습니다. 잠시 후 다시 시도해 주세요.');
                }
            });
        });

        // 차트 그리기 함수
        let myPieChart; // 전역 변수로 차트 인스턴스 선언
        function drawPieChart(labels, data, percentages) {
            const ctx = document.getElementById('myPieChart').getContext('2d');

            // 기존 차트가 존재하면 파괴
            if (myPieChart) {
                myPieChart.destroy();
            }

            myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: '매출액',
                        data: data,
                        backgroundColor: [
                        	'rgba(76, 175, 80, 0.6)',  // 세트 (연두색)
                            'rgba(255, 193, 7, 0.6)',   // 단품 (노란색)
                            'rgba(255, 0, 0, 0.6)',      // 사이드 (빨간색)
                            'rgba(0, 123, 255, 0.6)'     // 음료 (파란색)
                        ],
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: '메뉴별 매출 비율'
                        },
                    }
                }
            });
        }
    

    // 요약보기 
    $('.search-toggle').on('click', function() {
        if ($('.search-summary').is(':visible')) {
            $('.search-summary').slideUp(300);
            $('.search-original').slideDown(300);
            $(this).html(`요약보기<span class="icon material-symbols-outlined">Add</span>`);
        } else {
            $('.search-original').slideUp(300);
            $('.search-summary').slideDown(300);
            $(this).html(`전체보기<span class="icon material-symbols-outlined">Remove</span>`);
        }

        let startYmd = $('#startYmd').val();
        let endYmd = $('#endYmd').val();
        let menuType = $('#menuType option:selected').text();
        let menuNm = $('#menuNm').val();

        if (startYmd == '' && endYmd == '') {
            $('#dateSummary').text('전체');
        } else {
            $('#dateSummary').text(startYmd + " ~ " + endYmd);
        }

        if (menuType == '') {
            $('#menuTypeSummary').text('전체');
        } else {
            $('#menuTypeSummary').text(menuType);
        }

        if (menuNm == '') {
            $('#menuNmSummary').text('전체');
        } else {
            $('#menuNmSummary').text(menuNm);
        }
    });

    // 분류 조건 클릭 시 스타일 변화와 데이터 변화
    $('.tap-cont').on('click', function() {
        $('.tap-cont').removeClass('active');
        $(this).addClass('active');
        menuType = $(this).data('type');
        $('#menuType').val(menuType);
        var selectedOptionText = $('#menuType option:selected').text();
        $('#menuType').parent().find('.select-selected').text(selectedOptionText);
    });
});
</script>


<div class="content-header">
	<div class="container-fluid">
		<div class="row mb-2">
			<div class="col-sm-6">
				<h1 class="m-0">메뉴별 매출 조회</h1>
			</div>
		</div>
	</div>
</div>

<div class="wrap">
	<div class="search-section">
		<form id="searchForm">
			<!-- cont: 검색 영역 -->
			<div class="cont search-original">
				<div class="search-wrap">

					<!-- 판매 일자 검색조건 -->
					<div class="search-cont">
						<p class="search-title">판매 일자</p>
						<div class="search-date-wrap">
							<input type="date" id="startYmd" name="startYmd"
								value="${param.startYmd}"> ~ <input type="date"
								id="endYmd" name="endYmd" value="${param.endYmd}">
						</div>
					</div>

					<!-- 메뉴 유형 검색조건 -->
					<div class="search-cont">
						<p class="search-title">메뉴 유형</p>
						<div class="select-custom" style="width: 150px;">
							<!-- div 감싸주고 클래스에 select-costom 꼭 추가!! -->
							<select name="menuType" id="menuType">
								<option value="" selected>전체</option>
								<c:forEach var="menu" items="${menu}">
									<option value="${menu.comNo}">${menu.comNm}</option>
								</c:forEach>
							</select>
						</div>
					</div>

					<!-- 메뉴 명 검색조건 -->
					<div class="search-cont">
						<p class="search-title">메뉴 명</p>
						<input type="text" id="menuNm" name="menuNm"
							placeholder="키워드를 입력하세요" value="${param.menuNm}">
					</div>

				</div>
				<!-- /.search-wrap -->
			</div>
			<!-- /.cont: 검색 영역 -->
			<!-- cont:  검색 접기 영역 -->
			<div class="cont search-summary" style="display: none;">
				<div class="search-wrap">

					<!-- 판매 일자 검색조건 -->
					<div class="search-cont">
						<p class="search-title">
							판매 일자 <span class="summary" id="dateSummary">전체</span>
						</p>
					</div>
					<div class="divide-border"></div>

					<!-- 메뉴 유형 검색조건 -->
					<div class="search-cont">
						<p class="search-title">
							메뉴 유형 <span class="summary" id="menuTypeSummary">전체</span>
						</p>
					</div>
					<div class="divide-border"></div>

					<!-- 메뉴 명 검색조건 -->
					<div class="search-cont">
						<p class="search-title">
							메뉴 명<span class="summary" id="menuNmSummary">전체</span>
						</p>
					</div>

				</div>
				<!-- /.search-wrap -->
			</div>
			<!-- /.cont: 검색 영역 -->

			<!-- 검색 버튼 영역 -->
			<div class="search-control">
				<div class="search-control-btns">
					<div class="search-toggle">
						요약보기<span class="icon material-symbols-outlined">Add</span>
					</div>
					<div class="search-reset">
						초기화<span class="icon material-symbols-outlined">restart_alt</span>
					</div>
					<div>
						<button class="btn btn-default search" id="searchBtn">
							검색 <span class="icon material-symbols-outlined">search</span>
						</button>
					</div>
					<div>
                    </div>
				</div>
			</div>
			<!-- /.검색 버튼 영역 -->
		</form>
		<!-- /.search-section: 검색어 영역 -->
	</div>
	<!-- cont 끝 -->
	<div class="cont">
		<div class="table-chart-container"
			style="display: flex; justify-content: space-between;">
		<!-- table-wrap -->
		<div class="table-wrap" style="flex: 1; margin-right: 10px;">
			<div class="tap-btn-wrap">
				<div class="tap-wrap">
					<div data-type='' class="tap-cont active">
						<span class="tap-title">전체</span> 
						<span class="bge bge-default" id="tap-all">${total}</span>
					</div>
					<div data-type='MENU01' class="tap-cont">
						<span class="tap-title">세트</span> 
						<span class="bge bge-active" id="tap-menu01">${setMenuCnt}</span>
					</div>
					<div data-type='MENU02' class="tap-cont">
						<span class="tap-title">단품</span> 
						<span class="bge bge-warning" id="tap-menu02">${singleMenuCnt}</span>
					</div>
					<div data-type='MENU03' class="tap-cont">
						<span class="tap-title">사이드</span>
						<span class="bge bge-danger" id="tap-menu03">${sideMenuCnt}</span>
					</div>
					<div data-type='MENU04' class="tap-cont">
						<span class="tap-title">음료</span> 
						<span class="bge bge-info" id="tap-menu04">${drinkMenuCnt}</span>
					</div>
				</div>
				<div class="btn-wrap">
					<button class="btn btn-default" id="viewChartBtn">
                    	차트 보기 <span class="icon material-symbols-outlined">bar_chart</span>
                    </button>
				</div>
			</div>
			<table class="table-default menu-table">
				<thead>
					<tr>
						<th class="center" style="width: 10%">번호</th>
						<th class="center" style="width: 20%">메뉴 사진</th>
						<th class="center" style="width: 30%">메뉴 명</th>
						<th class="center" style="width: 15%">메뉴 유형</th>
						<th class="center" style="width: 25%">총 매출액(원)</th>
					</tr>
				</thead>
				<tbody>
					<c:forEach var="menuVO" items="${frcsMenuSlsList}">
						<tr>
							<td class="center" style="width: 10%">${menuVO.rnum}</td>
							<td class="center" style="width: 20%">
								<img src="${menuVO.menuImgPath}" alt="${menuVO.menuImgPath}" style="width: 100px; height: 100px;" /></td>
							<td style="width: 30%">${menuVO.menuNm}</td>
							<td class="center" style="width: 15%">
								<c:if test="${menuVO.menuType eq 'MENU01'}">
									<span class="bge bge-active">세트</span>
								</c:if> 
								<c:if test="${menuVO.menuType eq 'MENU02'}">
									<span class="bge bge-warning">단품</span>
								</c:if> 
								<c:if test="${menuVO.menuType eq 'MENU03'}">
									<span class="bge bge-danger">사이드</span>
								</c:if> 
								<c:if test="${menuVO.menuType eq 'MENU04'}">
									<span class="bge bge-info">음료</span>
								</c:if>
							</td>
							<td class="right" style="width: 25%">
								<fmt:formatNumber value="${menuVO.sumOrdrAmt}" pattern="#,###" />
							</td>
						</tr>
					</c:forEach>
				</tbody>
			</table>
		</div>
		<!-- table-wrap -->
		<div class="" style="flex: 1;">
	        <canvas id="myPieChart" width="100" height="100"></canvas>
	    </div>
	    </div>
	</div>
</div>
