<%--
    @fileName    : selectFrcsMenuList.jsp
    @programName : 가맹점 판매 메뉴 관리
    @description : 가맹점 판매 메뉴 관리를 위한 페이지
    @author      : 정현종
    @date        : 2024. 09. 12
--%>
<%@ page import="java.util.HashMap"%>
<%@ page import="java.util.ArrayList"%>
<%@ page import="java.util.Map"%>
<%@ page import="java.util.List"%>
<%@ page import="com.buff.vo.FrcsMenuVO"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<%@ page import="java.util.Calendar"%>
<%@ page import="java.util.Date"%>
<%@ page import="java.text.SimpleDateFormat"%>
<script src='/resources/js/global/value.js'></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/resources/js/jquery-3.6.0.js"></script>
<sec:authentication property="principal.MemberVO" var="user"/>

<%! 
    public boolean isNewMenu(String regDate) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
        try {
            Date registrationDate = sdf.parse(regDate);
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DAY_OF_MONTH, -30); // 현재 날짜에서 30일 전으로 설정
            Date thirtyDaysAgo = cal.getTime();
            return registrationDate.after(thirtyDaysAgo); // 등록일이 30일 이내인지 확인
        } catch (Exception e) {
            return false; // 오류 발생 시 false 리턴
        }
    }
%>

<script type="text/javascript">

let mbrId = '${user.mbrId}';

$(function(){

	// 메뉴 유형 변경 시 폼 제출
    $("#selMenuType").on("change", function(){
        $("#searchForm").submit();
    });
	
 	// Select All Left 체크박스 클릭 시
    $("#selectAllLeft").on("change", function(){
        $("input[name='menuCheckboxLeft']").prop("checked", this.checked);
    });

    // Select All Right 체크박스 클릭 시
    $("#selectAllRight").on("change", function(){
        $("input[name='menuCheckboxRight']").prop("checked", this.checked);
    });
    
 	// Add 버튼 클릭 시(왼쪽->오른쪽)
    $("#addBtn").on("click", function() {
        $("input[name='menuCheckboxLeft']:checked").each(function() {
            var row = $(this).closest("tr").clone(); // 선택된 행 복사
            row.find("input[name='menuCheckboxLeft']").prop("checked", false); // 체크박스 해제
            $("table.table-default tbody").eq(1).append(row); // 오른쪽 테이블에 추가
            
            // 오른쪽 테이블의 모든 행에서 체크박스 이름과 ID 변경
            $("#tbyRight").children("tr").each(function() {
                let checkbox = $(this).children("td").eq(0).children("input[type='checkbox']");
                if (checkbox.attr("name") === "menuCheckboxLeft") {
                    checkbox.attr("name", "menuCheckboxRight");
                }

                // ID 변경
                let id = checkbox.attr("id");
                if (id) {
                    checkbox.attr("id", id.replace("menu", "frcsMenu"));
                } else {
                    console.warn("Checkbox ID is undefined for row:", $(this));
                }
            });
            
            $(this).closest("tr").remove(); // 왼쪽 테이블에서 제거
        });
        $("#selectAllLeft").prop("checked", false); 
    });

    // Remove 버튼 클릭 시(오른쪽->왼쪽)
    $("#removeBtn").on("click", function() {
        $("input[name='menuCheckboxRight']:checked").each(function() {
            var row = $(this).closest("tr").clone(); // 선택된 행 복사
            row.find("input[name='menuCheckboxRight']").prop("checked", false); // 체크박스 해제
            $("table.table-default tbody").eq(0).append(row); // 왼쪽 테이블에 추가
            
            // 왼쪽 테이블의 모든 행에서 체크박스 이름과 ID 변경
            $("#tbyLeft").children("tr").each(function() {
                let checkbox = $(this).children("td").eq(0).children("input[type='checkbox']");
                if (checkbox.attr("name") === "menuCheckboxRight") {
                    checkbox.attr("name", "menuCheckboxLeft");
                }

                // ID 변경
                let id = checkbox.attr("id");
                if (id) {
                    checkbox.attr("id", id.replace("frcsMenu", "menu"));
                } else {
                    console.warn("Checkbox ID is undefined for row:", $(this));
                }
                
             	// SPAN 태그 제거
                $(this).children("td").eq(1).find("span").remove(); // 인덱스 1의 td에서 span 제거

            });
            
            $(this).closest("tr").remove(); // 오른쪽 테이블에서 제거
        });
        $("#selectAllRight").prop("checked", false); 
    });

    
    // 초기화 버튼 클릭 시 (전체 새로고침)
    $("#resetBtn").on("click", function(){
        location.reload(); // 페이지 새로 고침
    });
    
 	// 저장 버튼 클릭 시
    $("#saveBtn").on("click", function() {
        var leftMenuNos = [];
        var rightMenuNos = [];
        
        // 왼쪽 테이블의 모든 메뉴 번호 수집
        $("table.table-default:eq(0) .menuNo").each(function() {
            leftMenuNos.push($(this).val());
        });

        // 오른쪽 테이블의 모든 메뉴 번호 수집
        $("table.table-default:eq(1) .menuNo").each(function() {
            rightMenuNos.push($(this).val());
        });

        console.log("Sending data:", { mbrId: mbrId, leftMenuNos: leftMenuNos, rightMenuNos: rightMenuNos });
		
        let leftMenuNo = {};
		leftMenuNo.leftMenuNos = leftMenuNos;
		leftMenuNo.mbrId = mbrId;
		
		let rightMenuNo = {};
		rightMenuNo.rightMenuNos = rightMenuNos;
		rightMenuNo.mbrId = mbrId;
     	
		// AJAX 요청
        $.ajax({
            type: "POST",
            url: "/frcs/updateFrcsMenuAjax",
            contentType:"application/json;charset=utf-8",
            data: JSON.stringify({
                leftMenuNos: leftMenuNo,
                rightMenuNos: rightMenuNo
            }),
            beforeSend: function(xhr) {
                xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
            },
            success: function(response) {
                console.log("response : ", response);
                Swal.fire({
                    title: "판매 메뉴 관리 설정",
                    html: "판매 메뉴가 저장되었습니다.",
                    icon: "success",
                    confirmButtonColor: "#00C157",
                    confirmButtonText: "확인",
                }).then((result) => {
                    location.reload();
                });
            },
            error: function(xhr, status, error) {
                alert("변경사항 저장에 실패했습니다. 다시 시도해주세요.");
                console.error(error);
            }
        });
    });
});
</script>

<%
    List<Map<String, String>> menuTypes = new ArrayList<>();
    Map<String, String> menu1 = new HashMap<>();
    menu1.put("value", "MENU02");
    menu1.put("name", "단품");
    menuTypes.add(menu1);

    Map<String, String> menu2 = new HashMap<>();
    menu2.put("value", "MENU03");
    menu2.put("name", "사이드");
    menuTypes.add(menu2);

    Map<String, String> menu3 = new HashMap<>();
    menu3.put("value", "MENU04");
    menu3.put("name", "음료");
    menuTypes.add(menu3);

    request.setAttribute("menuTypes", menuTypes);
%>

<div class="cont">
    <!-- 제목 및 버튼 -->
    <div class="row" style="justify-content: space-between;">
         <div class="cont-title">가맹점 판매 메뉴 관리</div>
	         <div class="btn-wrap">
	          	<button type="button" class="btn-default" id="resetBtn">초기화</button>
				<button type="button" class="btn-active" id="saveBtn">저장 </button>
			 </div>
    </div>
    <!-- 검색 조건 시작 -->
    <form id="searchForm">
        <!-- 검색어 입력 -->
        <div class="search-cont">
            <p class="search-title">메뉴 유형</p>
            <div class="search-word-wrap">
                <select id="selMenuType" name="menuType" style="width: 150px;">
                    <option value="" <c:if test="${param.menuType == ''}">selected</c:if>>전체</option>
                    <c:forEach var="menu" items="${menuTypes}">
                        <option value="${menu.value}" <c:if test="${param.menuType == menu.value}">selected</c:if>>${menu.name}</option>
                    </c:forEach>
                </select>
                <div class="search-input-btn">
                    <input name="keyword" id="keyword" type="text" placeholder="메뉴 명을 입력해주세요" class="search-input w-400" value="${param.keyword}">
                    <button type="submit" class="search-btn" id="searchBtn"></button>                
                </div>
            </div>
        </div>
    </form>
    <!-- 검색 조건 끝 -->

    <!-- 테이블 디자인 -->
    <div class="table-container">
        <div class="table-wrap" style="display: flex; justify-content: space-between;">
            <div style="flex: 1; margin-right: 10px;">
                <h3>판매 가능한 메뉴</h3>
                <div style="max-height: 700px; overflow-y: auto;"> <!-- 스크롤 추가 -->
                    <table class="table-default">
                        <thead>
                            <tr>
                                <th class="center"><input type="checkbox" id="selectAllLeft" /></th>
                            	<th class="center">메뉴 사진</th>
                                <th class="center">메뉴 명</th>
                                <th class="center">메뉴 가격</th>
                            </tr>
                        </thead>
                        <tbody id="tbyLeft">
                            <c:forEach var="MenuVO" items="${menuVOList}">
                                <c:if test="${fn:contains(MenuVO.menuNm, param.keyword)}">
                                    <tr class="menu-row" data-type="${MenuVO.menuType}">
                                        <td class="center"><input type="checkbox" name="menuCheckboxLeft" value="${MenuVO.menuNo}" id="menu-${MenuVO.menuNo}" /></td>
                                        <td class="center"><img src="${MenuVO.menuImgPath}" alt="${MenuVO.menuNm}" style="width: 50px; height: 50px;" /></td>
                                        <td class="center">${MenuVO.menuNm}</td>
                                        <td class="center"><fmt:formatNumber value="${MenuVO.menuAmt}" pattern="#,###" /></td>
                                    	<td><input type="hidden" class="menuNo" value="${MenuVO.menuNo}" /></td> <!-- 숨겨진 메뉴 번호 -->
                                    </tr>
                                </c:if>
                            </c:forEach>
                        </tbody>
                    </table>
                </div>
            </div>
            
            <!-- 버튼 영역 -->
            <div style="flex: 0 0 100px; display: flex; flex-direction: column; justify-content: center; align-items: center;">
                <button type="button" class="btn-active" id="addBtn">▶</button>
                <button type="button" class="btn-danger" id="removeBtn" style="margin-top: 10px;">◀</button>
            </div>

            <div style="flex: 1; margin-left: 10px;">
                <h3>가맹점에서 판매할 메뉴</h3>
                <div style="max-height: 700px; overflow-y: auto;"> <!-- 스크롤 추가 -->
                    <table class="table-default">
                        <thead>
                            <tr>
                                <th class="center"><input type="checkbox" id="selectAllRight" /></th>
                                <th class="center">메뉴 사진</th>
                                <th class="center">메뉴 명</th>
                                <th class="center">메뉴 가격</th>
                            </tr>
                        </thead>
                        <tbody id="tbyRight">
                            <c:forEach var="frcsMenuVO" items="${frcsMenuVOList}">
                                <c:if test="${fn:contains(frcsMenuVO.menuNm, param.keyword)}">
                                    <td hidden="">"${MenuVO.menuNo}</td>
                                    <tr class="menu-row" data-type="${frcsMenuVO.menuType}">
                                    	<c:set var="registrationDate" value="${frcsMenuVO.menuRegYmd}" />
                                        <td class="center"><input type="checkbox" name="menuCheckboxRight" value="${frcsMenuVO.menuNo}" id="frcsMenu-${frcsMenuVO.menuNo}" /></td>
                                        <td class="center">
							                <%
							                    String regDate = (String) pageContext.getAttribute("registrationDate"); // registrationDate를 가져옴
							                    if (isNewMenu(regDate)) {
							                %>
							                    <span style="color: red;">NEW</span>
							                <%
							                    }
							                %>
							                <img src="${frcsMenuVO.menuImgPath}" alt="${frcsMenuVO.menuNm}" style="width: 50px; height: 50px;" />
							            </td>
                                        <td class="center">${frcsMenuVO.menuNm}</td>
                                        <td class="center"><fmt:formatNumber value="${frcsMenuVO.menuAmt}" pattern="#,###" /></td>
                                    	<td><input type="hidden" class="menuNo" value="${frcsMenuVO.menuNo}" /></td>
                                    </tr>
                                </c:if>
                            </c:forEach>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- table-container 끝 -->
</div>
<!-- cont 끝 -->
