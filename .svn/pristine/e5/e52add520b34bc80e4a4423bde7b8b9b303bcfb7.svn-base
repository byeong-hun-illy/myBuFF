/*******************************************
  @fileName    : gds.js
  @author      : 이병훈
  @date        : 2024. 09. 23
  @description : 거래처 상품 조회 코드
********************************************/
document.write("<script src='/resources/js/global/value.js'></script>");

// @methodName  : selectGdsAjax
// @author      : 이병훈
// @date        : 2024.09.23
// @jsp         : cnpt/gds/selectGds
// @description : 거래처 상품 리스트 및 검색 조건에 따른 리스트 조회

function selectGdsAjax(){
	
	let gubun = $("#gubun").val();
	let keyword = $("#keyword").val();
	
	console.log("bzentNo : " + bzentNo);
	
	let data = { };
	
	data.currentPage = currentPage;
	data.sort = sort;
	data.orderby = orderby;
	data.gubun = gubun;
	data.keyword = keyword;
	data.bzentNo = bzentNo;
	
	console.log("data : ", data);
	
	$.ajax({
		url : "/cnpt/gds/listAjax",
		type : "GET",
		data : data, 
		success : function(res){
			console.log("res : ",res);
			
			// 전체 상품 수 all값을 동적으로 업데이트 
			$("#tap-all").text(res.all);
			
			let strTbl = '';
			if(res.articlePage.total == 0){ // 검색 결과가 0인 경우
				strTbl += 
						`<tr>
							<td class="error-info" colspan="8"> 
								<span class="icon material-symbols-outlined">error</span>
								<div class="error-msg">검색 결과가 없습니다</div>
							</td>
						</tr>`;
			
			} else {
				res.articlePage.content.forEach(list => {
					// 각각의 재고 정보를 반복하여 출력
					console.log(list);
					
					let qty = list.stockVOList[0].qty;
					// 천 단위 구분 기호 적용
					let formatQty = qty.toLocaleString();
					
					let amt = list.stockVOList[0].gdsAmtVOList[0].amt;
					
					let formatAmt = amt.toLocaleString();
					
					// 판매 유형
					let ntsl = `<span class='bge ${
					    list.stockVOList[0].ntslType=='GDNT01' ? 'bge-info-border' 
					    : list.stockVOList[0].ntslType=='GDNT02' ? 'bge-danger-border' 
					    : 'bge-active-border'}'>${list.stockVOList[0].ntslTypeNm}</span>`;
					// 유형
					let type = `<span class='bge ${
					    list.gdsType.substring(0, 2) == 'FD' ? 'bge-active' 
					    : list.gdsType.substring(0, 2) == 'SM' ? 'bge-warning' 
					    : 'bge-danger'}'>${list.gdsTypeNm}</span>`;
					
					
					strTbl += 
	 						`
	 						<tr class="product-row" data-gds-code="${list.gdsCode}">
	 							<td class="center">${list.rnum}</td>
	 							<td class="center">${list.gdsNm}</td>
	 							<td class="center">${formatQty}</td>
	 							<td class="center">${list.unitNm}</td>
	 							<td class="center">${formatAmt}원</td>
	 							<td class="center">${ntsl}</td>
				        		<td class="center">${type}</td>
	 						</tr>
	 						`;
					
				});
			}
	
				// 페이징 처리
				let page = '';
				if (res.articlePage.startPage > res.articlePage.blockSize) {
				    page += `<a href="#page" class="page-link" data-page="${res.articlePage.startPage - res.articlePage.blockSize}">
				            <span class="icon material-symbols-outlined">chevron_left</span></a>`;
				}
				for (let pnum = res.articlePage.startPage; pnum <= res.articlePage.endPage; pnum++) {
					if (res.articlePage.currentPage === pnum) {
						page += `<a href="#page" class="page-link active" data-page="${pnum}">${pnum}</a>`;
					} else {
						page += `<a href="#page" class="page-link" data-page="${pnum}">${pnum}</a>`;
					}
				}
				if (res.articlePage.endPage < res.articlePage.totalPages) {
					page += `<a href="#page" class="page-link" data-page="${res.articlePage.startPage + res.articlePage.blockSize}">
				            <span class="icon material-symbols-outlined">chevron_right</span></a>`;
				}
				
				$('.pagination').html(page);
			
				// 테이블 바디에 데이터 삽입
				$('#table-body').html(strTbl);
				
				
		}
	// ajax 끝	
	});
// selectGdsAjax 끝	
}
 /*******************************************
	상품 단가 변동 추이 조회 - 6개월의 월수 데이터 뽑기
********************************************/
 // @methodName  : getSixMonths
// @author      : 이병훈
// @date        : 2024.09.25
// @jsp         : /cnpt/gds/selectGds, /cnpt/gds/amtTrend
// @description : chart.js x행에 들어갈 6개월 간의 월 수


// 지난 6개월의 월 단위 추출 함수
function getSixMonths(){
	const months = [];
	const currentDate = new Date();
	
	for(let i=0; i<6; i++){
		// 월은 0부터 시작하므로 +1
		const month = new Date(currentDate.getFullYear(), currentDate.getMonth()-i, 1);
		months.unshift(month.toLocaleDateString('ko-KR', { year: '2-digit', month : '2-digit' }));
		}		

	// 최신날짜가 앞에 오도록 순서 반전
	return months;

// getSixMonths 함수 끝	
}
 /*******************************************
	6개월 간 변동 이력이 없으면 같은 단가로 측정되게
********************************************/
function createSameValue(gdsAmtVOList, months){
	// gdsAmtVOList에 값이 있으면 그 값을 6개월 동안 동일하게, 없으면 0 또는 기본값으로 설정
	let amtValue = gdsAmtVOList.length > 0 ? gdsAmtVOList[0].amt : 0;
	
	// 6개월 모두 동일한 값으로 변경
	return months.map(() => amtValue);

}


/*******************************************
	상품 상세 페이지 
********************************************/

function selectGdsDtlAjax(){
	
let stockVO = {};

stockVO.gdsCode = gdsCode;
stockVO.bzentNo = bzentNo;

// 서버 전송
$.ajax({
	url : "/cnpt/gds/dtlAjax",
	type : "POST",
	data : JSON.stringify(stockVO),
	contentType : "application/json; charset=utf-8",
	// csrf 설정 security 설정된 경우 필수
	beforeSend : function(xhr){
		// CSRF 헤더와 토큰을 설정
		xhr.setRequestHeader(csrfHeader, csrfToken); 
	},
	success : function(res){
		let gds = res.gdsVO;
		console.log(res);
		if(res.chk>0){
			// 재고에 이미 있는 경우
			$(".input-gds").prop("disabled", true);
			$(".gds-update").hide();
			let type = `<span class='bge ${
				gds.gdsType.substring(0, 2) == 'FD' ? 'bge-active'
				: gds.gdsType.substring(0,2) == 'SM' ? 'bge-warning'
				: 'bge-danger'}'>${gds.gdsTypeNm}</span>`;
			$(".gdsType").html(type);
		} else{
			// 없을 경우
			$("#gdsType").val(gds.gdsType);
			$(".amt-update").hide();
			
		}
		
		$("#gdsNm").val(gds.gdsNm);
		
		$("#unitNm").val(gds.unitNm);
		let amt = "";
		
		if(gds.stockVOList[0].gdsAmtVOList){
			amt = gds.stockVOList[0].gdsAmtVOList[gds.stockVOList[0].gdsAmtVOList.length-1].amt;
		}
		
		ntslType = gds.stockVOList[0].ntslType;
		
		// 판매 유형
		let ntsl = `<span class='bge ${
			gds.stockVOList[0].ntslType=='GDNT01' ? 'bge-info-border'
			: gds.stockVOList[0].ntslType=='GDNT02' ? 'bge-danger-border'
			: 'bge-active-border'}'>${gds.stockVOList[0].ntslTypeNm}</span>`;
			
		if(ntslType=="GDNT01"){
			amt = "";
			$("#ntslTypeTd").html(ntsl);
		} else{
			$("#ntslType").val(gds.stockVOList[0].ntslType);
		}
		$("#amt").val(amt);
		$("#qty").text(gds.stockVOList[0].qty.toLocaleString());
		
		// 현재부터 6개월 전까지의 월
		var months = getSixMonths();
		var chartData = createSameValue(gds.stockVOList[0].gdsAmtVOList, months);
		
		
		// 차트 js 시작
		var myChart = new Chart(
			document.getElementById("amtChart"),
			{
				type : "line",
				data : {
						labels : months,
						datasets : [{
				            label: "단가 변동 추이",
				            data: chartData,
				            fill: false,
				            borderColor: 'rgb(0, 193, 87)',
				            tension: 0.5
				        }]
				},
			options :{
				scales: {
					x : {
						title : { display : true, text : "날짜" },
					},
					y : {
						title : { display : true, text : "단가 (원)" },
	                    min: Math.min(...chartData) - 200,
	                    max: Math.max(...chartData) + 200
						}
		            },
			    legend: {
			        display: false
			    	},	
			    tooltips: {
			        callbacks: {
			           label: function(tooltipItem) {
			                  return tooltipItem.yLabel;
				           }
				        }
				    },
			    plugins: {
	                // 데이터 라벨을 각 점 위에 표시
	                datalabels: { // datalables 플러그인 세팅
			          formatter: function (value, context) {
			            // 출력 텍스트
			            return value.toLocaleString() + '%';
			          },
			          align: 'top', // 도넛 차트에서 툴팁이 잘리는 경우 사용
			        },
	            }
			// options 종료
			}
		}
	// chart 끝	
	);
	
	let strTbl = "";
	
	if(gds.stockVOList[0].gdsAmtVOList[0].amt == 0 || gds.stockVOList[0].gdsAmtVOList[0].amt == 0){
		// 검색 결과가 0인 경우
		strTbl += `
					<tr>
						<td class="error-info" colspan="3"> 
							<span class="icon material-symbols-outlined">error</span>
							<div class="error-msg">단가 변동 결과가 없습니다</div>
						</td>
					</tr>
				  `;
	} else {
		gds.stockVOList[0].gdsAmtVOList.forEach(list => {
			// 조정 일자
			let ajmt = dtToStr(list.ajmtDt)
    		strTbl += `
					    <tr class="frcsChkDtl" data-no="${list.bzentNo}" data-seq="${list.chckSeq}">
					        <td class="center" style="width: 20%">${list.amtSeq}</td>
					        <td class="center" style="width: 50%">${ajmt}</td>
					        <td class="center" style="width: 30%">${list.amt.toLocaleString()} 원</td>
					    </tr>
					 `;
			
			});
	}
		$("#table-body-amt").html(strTbl);
		
	// success 끝	
	}
  // ajax 끝	
  })
// function 끝  
}	
	



