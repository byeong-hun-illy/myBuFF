package com.buff.hdofc.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.buff.com.mapper.ClsbizRsnMapper;
import com.buff.com.mapper.ComMapper;
import com.buff.com.mapper.RgnMapper;
import com.buff.hdofc.service.HdofcFrcsClsbizService;
import com.buff.hdofc.service.HdofcFrcsService;
import com.buff.util.ArticlePage;
import com.buff.vo.BzentVO;
import com.buff.vo.FrcsVO;

import oracle.jdbc.proxy.annotation.Post;

/**
* @packageName  : com.buff.hdofc.controller
* @fileName     : HdofcFrcsClsbizController.java
* @author       : 송예진
* @date         : 2024.09.21
* @description  : 본사가 관리하는 가맹점 폐업 관리 컨트롤러
* ===========================================================
* DATE              AUTHOR             NOTE
* -----------------------------------------------------------
* 2024.09.21        송예진     	  			최초 생성
*/
@PreAuthorize("hasRole('ROLE_HDOFC')")
@RequestMapping("/hdofc/frcs/clsbiz")
@Controller
public class HdofcFrcsClsbizController {
	
	@Autowired
	HdofcFrcsService frcsService;
	
	@Autowired
	ClsbizRsnMapper rsnMapper; 
	
	@Autowired
	RgnMapper rgnMapper;
	
	@Autowired
	ComMapper comMapper;
	
	@Autowired
	HdofcFrcsClsbizService clsbizService;
	
	/**
	* @methodName  : selectFrcsClsbiz
	* @author      : 송예진
	* @date        : 2024.09.21
	* @param model
	* @return      : 폐업 리스트로 이동
	*/
	@GetMapping("/list")
	public String selectFrcsClsbiz(Model model) {
		// 검색 조건
		model.addAttribute("mngr", this.frcsService.selectFrcsMngr());
		model.addAttribute("rgn", this.comMapper.selectCom("RGN"));
		model.addAttribute("rsn", this.comMapper.selectCom("CR"));
		model.addAttribute("cls", this.comMapper.selectCom("CLS"));
		return "hdofc/frcs/selectFrcsClsbiz";
	}
	
	@ResponseBody
	@GetMapping("/listAjax")
	public Map<String, Object> selectFrcsClsbizAjax(@RequestParam Map<String, Object> map){
		int size = 10;
	    int total = this.clsbizService.selectTotalFrcsClsbiz(map);
	    map.put("size", size);
	    List<FrcsVO> frcsList = this.clsbizService.selectFrcsClsbiz(map);
	    int currentPage = Integer.parseInt((String) map.get("currentPage"));
	    
	    // 분류 숫자 계산
	    int all = this.clsbizService.selectAllFrcsClsbiz(map);
	    int pre = this.clsbizService.selectPreFrcsClsbiz(map);
	    int noCln = this.clsbizService.selectNoClnFrcsClsbiz(map);
	    int cln = this.clsbizService.selectClnFrcsClsbiz(map);
	    int aprv = this.clsbizService.selectAprvFrcsClsbiz(map);
	    // 응답 데이터를 담을 Map 생성
	    Map<String, Object> response = new HashMap<>();
	    response.put("articlePage", new ArticlePage<FrcsVO>(total, currentPage, size, frcsList, map));
	    response.put("all", all);
	    response.put("pre", pre);
	    response.put("noCln", noCln);
	    response.put("cln", cln);
	    response.put("aprv", aprv);
	    
	    return response; // 여러 데이터를 포함한 Map 반환
	}
	
	/**
	* @methodName  : selectFrcsClsbizDtl
	* @author      : 송예진
	* @date        : 2024.09.21
	* @param frcsNo
	* @return      : 폐업 상세
	*/
	@ResponseBody
	@GetMapping("/dtlAjax")
	public FrcsVO selectFrcsClsbizDtl(@RequestParam String frcsNo) {
		return this.clsbizService.selectFrcsClsbizDtl(frcsNo);
	}

	@ResponseBody
	@PostMapping("/updateOne")
	public int updateOneFrcsClsbiz(@RequestParam String frcsNo) {
		BzentVO bzentVO = new BzentVO();
		bzentVO.setBzentNo(frcsNo);
		// 권한 삭제
		this.frcsService.deleteRoleFrcs(bzentVO);
		// 회원 구분 고객으로 변경
		this.frcsService.updateMbrType(bzentVO);
		// 폐업 타입 변경
		this.clsbizService.updateFrcsType(frcsNo);
		// 폐업 승인처리
		return this.clsbizService.updateOneFrcsClsbiz(frcsNo);
	}
}
